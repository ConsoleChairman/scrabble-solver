@import 'styles/mixins';

@mixin lighthouse-input-size-hack {
  // Hack for this Lighthouse warning:
  // > Interactive elements like buttons and links should be large enough (48x48px), and have
  // > enough space around them, to be easy enough to tap without overlapping onto other elements.

  input {
    position: absolute;
    top: -200%;
    right: -100%;
    left: -100%;
    bottom: 0;
    width: 300%;
    height: 300%;
    clip-path: polygon((100% / 3) (200% / 3), (200% / 3) (200% / 3), (200% / 3) 100%, (100% / 3) 100%);
  }

  [dir='ltr'] & {
    &:nth-child(1),
    &:nth-child(2),
    &:nth-child(3) {
      input {
        left: 0;
        clip-path: polygon(0 (200% / 3), (100% / 3) (200% / 3), (100% / 3) 100%, 0 100%);
      }
    }

    &:nth-last-child(1),
    &:nth-last-child(2),
    &:nth-last-child(3) {
      input {
        left: -200%;
        clip-path: polygon((200% / 3) (200% / 3), 100% (200% / 3), 100% 100%, (200% / 3) 100%);
      }
    }
  }

  [dir='rtl'] & {
    &:nth-child(1),
    &:nth-child(2),
    &:nth-child(3) {
      input {
        left: -200%;
        right: 0;
        clip-path: polygon((200% / 3) (200% / 3), 100% (200% / 3), 100% 100%, (200% / 3) 100%);
      }
    }

    &:nth-last-child(1),
    &:nth-last-child(2),
    &:nth-last-child(3) {
      input {
        left: 0;
        right: -200%;
        clip-path: polygon(0 (200% / 3), (100% / 3) (200% / 3), (100% / 3) 100%, 0 100%);
      }
    }
  }
}

.rack {
  position: relative;
  display: flex;
  box-shadow: var(--box-shadow);
  border-radius: var(--border--radius);
  transition: var(--transition);
  opacity: 1;
}

.hidden {
  opacity: 0;
}

.sharpLeft {
  [dir='ltr'] & {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  [dir='rtl'] & {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
}

.sharpRight {
  [dir='ltr'] & {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  [dir='rtl'] & {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.form {
  @include focus-effect;

  border-radius: var(--border--radius);
}

.input {
  @include text-input;

  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: var(--border--radius);
  border: none;
  opacity: 0;
  caret-color: transparent;
  box-shadow: var(--box-shadow);

  &:focus {
    opacity: 1;
    caret-color: auto;
  }
}
