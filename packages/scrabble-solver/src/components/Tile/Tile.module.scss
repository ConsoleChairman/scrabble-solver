@import 'styles/mixins';

.tile {
  --background-color: transparent;

  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  background-color: var(--background-color);
  border-radius: var(--border--radius);
  font-weight: bold;
  text-transform: uppercase;
  text-align: center;
  transition: var(--transition);
  user-select: none;

  &.blank {
    --background-color: var(--color--white);

    color: var(--color--foreground);
  }

  &.empty {
    color: var(--color--inactive);
  }

  &.highlighted {
    --background-color: var(--color--primary);

    color: var(--color--primary--opposite);

    .points {
      color: inherit;
    }
  }

  &.points1 {
    --background-color: var(--color--yellow);
  }

  &.points2 {
    --background-color: var(--color--green);
  }

  &.points3,
  &.points4 {
    --background-color: var(--color--blue);
  }

  &.points5 {
    --background-color: var(--color--red);
  }

  &.raised {
    --shadow--size: 2px;
    --shadow--blur: 2px;
    --shadow--spread: -1px;
    --shadow--color: rgba(34, 34, 34, 0.8);

    box-shadow: inset calc(-1 * var(--shadow--size)) calc(-1 * var(--shadow--size)) var(--shadow--blur)
      var(--shadow--spread) var(--shadow--color);

    @include media('<xs') {
      --shadow--size: 1px;
      --shadow--spread: 0;
      --shadow--blur: 1px;
    }
  }
}

.input {
  width: 100%;
  height: 100%;
  border: none;
  background-color: transparent;
  color: transparent;
  caret-color: transparent;
  font-size: 16px; // prevent iOS from automatically zooming in on focus

  &::selection {
    --background--color: transparent;
  }
}

.points {
  @include text-stroke(var(--background-color), 1px);

  position: absolute;
  font-weight: bold;
  user-select: none;
  pointer-events: none;
  letter-spacing: -1px;

  @include media('<xs') {
    display: none;
  }

  [dir='ltr'] & {
    bottom: 1%;
    right: 9%;
  }

  [dir='rtl'] & {
    top: 1%;
    left: 9%;
  }
}

.alert {
  $size: 30%;

  position: absolute;
  width: $size;
  height: $size;
  background-color: var(--color--error--opposite);
  color: var(--color--error);

  [dir='ltr'] & {
    top: 0;
    right: 0;
    border-top-right-radius: inherit;
  }

  [dir='rtl'] & {
    bottom: 0;
    right: 0;
    border-bottom-right-radius: inherit;
  }
}
