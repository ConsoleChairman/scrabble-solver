@import 'styles/mixins';

@mixin lighthouse-input-size-hack {
  // Hack for this Lighthouse warning:
  // > Interactive elements like buttons and links should be large enough (48x48px), and have
  // > enough space around them, to be easy enough to tap without overlapping onto other elements.

  input {
    position: absolute;
    top: -100%;
    right: -100%;
    left: -100%;
    bottom: -100%;
    width: 300%;
    height: 300%;
    clip-path: inset((100% / 3));
  }

  [dir='ltr'] & {
    &:nth-child(1),
    &:nth-child(2),
    &:nth-child(3) {
      input {
        left: 0;
        clip-path: polygon(0 (100% / 3), (100% / 3) (100% / 3), (100% / 3) (200% / 3), 0 (200% / 3));
      }
    }

    &:nth-last-child(1),
    &:nth-last-child(2),
    &:nth-last-child(3) {
      input {
        left: -200%;
        clip-path: polygon((200% / 3) (100% / 3), 100% (100% / 3), 100% (200% / 3), (200% / 3) (200% / 3));
      }
    }
  }

  [dir='rtl'] & {
    &:nth-child(1),
    &:nth-child(2),
    &:nth-child(3) {
      input {
        left: -200%;
        right: 0;
        clip-path: polygon((200% / 3) (100% / 3), 100% (100% / 3), 100% (200% / 3), (200% / 3) (200% / 3));
      }
    }

    &:nth-last-child(1),
    &:nth-last-child(2),
    &:nth-last-child(3) {
      input {
        left: 0;
        right: -200%;
        clip-path: polygon(0 (100% / 3), (100% / 3) (100% / 3), (100% / 3) (200% / 3), 0 (200% / 3));
      }
    }
  }
}

.cell {
  @include focus-effect;
  @include lighthouse-input-size-hack;

  position: relative;
  display: table-cell;
  vertical-align: middle;
  background-color: var(--color--white);
  border-bottom: var(--border--width) dotted var(--border--color--light);
  background-clip: padding-box;

  [dir='ltr'] & {
    border-right: var(--border--width) dotted var(--border--color--light);
  }

  [dir='rtl'] & {
    border-left: var(--border--width) dotted var(--border--color--light);
  }

  &.bottom {
    border-bottom: none;
  }

  &.right {
    [dir='ltr'] & {
      border-right: none;
    }

    [dir='rtl'] & {
      border-left: none;
    }
  }

  &.bonusStart {
    &::before {
      content: '';
      background-color: var(--color--bonus--start);
    }
  }

  &.bonusCharacter1 {
    &::before {
      content: '';
      background-color: var(--color--bonus--character--1);
    }
  }

  &.bonusCharacter2 {
    &::before {
      content: '';
      background-color: var(--color--bonus--character--2);
    }
  }

  &.bonusCharacter3 {
    &::before {
      content: '';
      background-color: var(--color--bonus--character--3);
    }
  }

  &.bonusCharacter5 {
    &::before {
      content: '';
      background-color: var(--color--bonus--character--5);
    }
  }

  &.bonusCharacterMultiplier2 {
    &::before {
      content: '';
      background-color: var(--color--bonus--character-multiplier--2);
    }
  }

  &.bonusCharacterMultiplier3 {
    &::before {
      content: '';
      background-color: var(--color--bonus--character-multiplier--3);
    }
  }

  &.bonusWord2 {
    &::before {
      content: 'x2';
      background-color: var(--color--bonus--word-multiplier--2);
    }
  }

  &.bonusWord3 {
    &::before {
      content: 'x3';
      background-color: var(--color--bonus--word-multiplier--3);
    }
  }

  &.filtered {
    &::before {
      content: '';
      background-color: var(--color--foreground--secondary);
    }
  }

  &::before {
    $size: 80%;

    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: (100% - $size) / 2;
    left: (100% - $size) / 2;
    width: $size;
    height: $size;
    border-radius: var(--border--radius);
    pointer-events: none;
    font-size: 60%;
    font-weight: bold;
    color: var(--color--white);
    transition: var(--transition);

    [lang='fa-IR'] & {
      font-family: var(--font--family--latin);
    }
  }

  &:focus-within {
    z-index: 2;
  }
}

.tile {
  .sharpTopLeft & {
    [dir='ltr'] & {
      border-top-left-radius: 0;
    }

    [dir='rtl'] & {
      border-top-right-radius: 0;
    }
  }

  .sharpTopRight & {
    [dir='ltr'] & {
      border-top-right-radius: 0;
    }

    [dir='rtl'] & {
      border-top-left-radius: 0;
    }
  }

  .sharpBottomLeft & {
    [dir='ltr'] & {
      border-bottom-left-radius: 0;
    }

    [dir='rtl'] & {
      border-bottom-right-radius: 0;
    }
  }

  .sharpBottomRight & {
    [dir='ltr'] & {
      border-bottom-right-radius: 0;
    }

    [dir='rtl'] & {
      border-bottom-left-radius: 0;
    }
  }
}

.icon {
  $size: 40%;

  position: absolute;
  top: 50%;
  left: 50%;
  width: $size;
  height: $size;
  transform: translate(-50%, -50%);
  color: var(--color--white);
}
